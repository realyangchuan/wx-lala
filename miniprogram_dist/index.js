"use strict";function n(n){return new Promise(((e,t)=>{setTimeout((()=>t("timeout")),n)}))}function e(n){let e=null,t=null;function c(){n.p=e=t=null}n.p=null,Object.assign(n,{lock(){n.p=new Promise(((n,c)=>{e=n,t=c}))},unlock(){e&&(e?.(),c())},cancel(){t&&(t?.("canceled"),c())}})}function t(n,e){n?n.then((async()=>await(e?.()))):e?.()}function c(n){return"Object"===Object.prototype.toString.call(n).slice(8,-1)}function o(n,e,t=!0){const s={...n};for(const n in e){if(t&&"env"===n)continue;const r=e.baseURL;if(t&&"baseURL"===n&&r){const n=s.url;if(void 0===n||/^https?:\/\//.test(n))continue;const e=Array.prototype.findIndex.call(n,(n=>/\w/.test(n))),t=-1===e?"":n.slice(e);r.endsWith("/")?s.url=r+t:s.url=t?r+"/"+t:r}else s.hasOwnProperty(n)?c(s[n])&&c(e[n])&&(s[n]=o(s[n],e[n],!1)):s[n]=e[n]}return s}function s(n,c){function s(e){const r=s.interceptors;return new Promise(((s,u)=>{const i=o(e,n);let l=r.request.handler?.(i);t(r.request.p,(async()=>{l=await Promise.resolve(l)??i,c(l).then((async n=>{const e=await(r.response.handler?.(n,l))??n;t(r.response.p,(()=>s(e)))})).catch((async n=>{const e=await(r.response.errHandler?.(n,l))??n;t(r.response.p,(()=>u(e)))}))}))}))}return s.interceptors=function(){const n={request:{use(n){this.handler=n}},response:{use(n,e){this.handler=n,this.errHandler=e}}};return e(n.request),e(n.response),n}(),s}function r(n,e){return new Promise(((t,c)=>{n({...e,async success(n){t(await(e.success?.(n))??n)},async fail(n){c(await(e.fail?.(n))??n)},async complete(){await(e.complete?.())}})}))}function u(n){return r(wx.request,n)}module.exports=function(e={}){const t=function(n){n.env&&wx.cloud.init({env:n.env});let e=wx.cloud;n.function?.env&&(e=new wx.cloud.Cloud({resourceEnv:n.function.env}),e.init());let t=wx.cloud;return n.container?.env&&(t=new wx.cloud.Cloud({resourceEnv:n.container.env}),t.init()),{cloudFunctionInstance:e,cloudContainerInstance:t}}(e);return{request:s(e?.request??{},u),callFunction:s(e?.function??{},(e=>function(e,t){const{timeout:c,...o}=e;let s=null;return s=o.success||o.fail||o.complete?r(t.callFunction,o):t.callFunction(o),c?Promise.race([s,n(c)]):s}(e,t.cloudFunctionInstance))),callContainer:s(e?.container??{},(n=>function(n,e){const{success:t,fail:c,complete:o}=n;return t||c||o?r(e.callContainer,n):e.callContainer(n)}(n,t.cloudContainerInstance)))}};
